apply plugin: 'com.android.library'
def isReleaseBuildType = false
gradle.startParameter.taskNames.each({
    String taskNameL = it.toLowerCase()
    if (taskNameL.contains("release")) {
        isReleaseBuildType = true
    }
    if (taskNameL.equalsIgnoreCase('uploadArchives')) {
        isReleaseBuildType = true
    }
})

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        renderscriptTargetApi rootProject.ext.renderscriptTargetApi
        renderscriptSupportModeEnabled rootProject.ext.renderscriptSupportModeEnabled

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-13', '-DANDROID_TOOLCHAIN=clang'
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        externalNativeBuild.cmake.abiFilters = isReleaseBuildType ? ['armeabi-v7a', 'arm64-v8a'] : ['armeabi-v7a', 'arm64-v8a', 'x86']
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            jniDebuggable true
        }
    }

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }

    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:support-annotations:28.0.0'
}
